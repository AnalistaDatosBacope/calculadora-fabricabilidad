#!/usr/bin/env python3
"""
Script para verificar el estado de la aplicaci√≥n web en Render.com
"""

import requests
import time
import json
from datetime import datetime

def check_web_status():
    """Verificar el estado de la aplicaci√≥n web"""
    url = "https://calculadora-fabricabilidad.onrender.com/"
    
    print(f"üîç Verificando estado de la aplicaci√≥n web...")
    print(f"üì° URL: {url}")
    print(f"‚è∞ Timestamp: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("-" * 60)
    
    try:
        # Verificar respuesta b√°sica
        print("1Ô∏è‚É£ Verificando respuesta b√°sica...")
        response = requests.get(url, timeout=30)
        
        print(f"   Status Code: {response.status_code}")
        print(f"   Content-Type: {response.headers.get('content-type', 'N/A')}")
        print(f"   Content-Length: {len(response.content)} bytes")
        
        if response.status_code == 200:
            print("   ‚úÖ La aplicaci√≥n responde correctamente")
            
            # Verificar si es la p√°gina de login
            if "login" in response.text.lower() or "iniciar sesi√≥n" in response.text.lower():
                print("   üìù Detectada p√°gina de login - aplicaci√≥n funcionando")
            else:
                print("   ‚ö†Ô∏è  No se detect√≥ p√°gina de login - verificar contenido")
                
        elif response.status_code == 500:
            print("   ‚ùå Error 500 - Error interno del servidor")
            print("   üîß Posibles causas:")
            print("      - Error en el c√≥digo de la aplicaci√≥n")
            print("      - Problema con la base de datos")
            print("      - Error en las dependencias")
            
        elif response.status_code == 404:
            print("   ‚ùå Error 404 - P√°gina no encontrada")
            
        elif response.status_code == 502:
            print("   ‚ùå Error 502 - Bad Gateway")
            print("   üîß Posibles causas:")
            print("      - La aplicaci√≥n no se inici√≥ correctamente")
            print("      - Problema con gunicorn")
            print("      - Error en el build")
            
        else:
            print(f"   ‚ö†Ô∏è  Status code inesperado: {response.status_code}")
            
    except requests.exceptions.Timeout:
        print("   ‚è∞ Timeout - La aplicaci√≥n no responde en 30 segundos")
        print("   üîß Posibles causas:")
        print("      - La aplicaci√≥n est√° iniciando (cold start)")
        print("      - Problema de conectividad")
        print("      - La aplicaci√≥n est√° ca√≠da")
        
    except requests.exceptions.ConnectionError:
        print("   ‚ùå Error de conexi√≥n")
        print("   üîß Posibles causas:")
        print("      - La aplicaci√≥n no est√° desplegada")
        print("      - Problema de DNS")
        print("      - La aplicaci√≥n est√° ca√≠da")
        
    except Exception as e:
        print(f"   ‚ùå Error inesperado: {e}")
    
    print("-" * 60)
    
    # Verificar endpoints espec√≠ficos
    print("2Ô∏è‚É£ Verificando endpoints espec√≠ficos...")
    
    endpoints = [
        ("/login", "P√°gina de login"),
        ("/register", "P√°gina de registro"),
        ("/api/models", "API de modelos"),
    ]
    
    for endpoint, description in endpoints:
        try:
            full_url = url.rstrip('/') + endpoint
            response = requests.get(full_url, timeout=10)
            status = "‚úÖ" if response.status_code in [200, 302, 401] else "‚ùå"
            print(f"   {status} {endpoint} ({description}): {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå {endpoint} ({description}): Error - {e}")
    
    print("-" * 60)
    print("3Ô∏è‚É£ Recomendaciones:")
    print("   üìã Si hay errores:")
    print("      1. Verificar logs en Render.com Dashboard")
    print("      2. Revisar build logs para errores de dependencias")
    print("      3. Verificar configuraci√≥n de variables de entorno")
    print("      4. Comprobar que gunicorn est√© en requirements.txt")
    print("      5. Verificar que app.py tenga la configuraci√≥n correcta")
    
    print("\n   üîó Enlaces √∫tiles:")
    print("      - Dashboard Render.com: https://dashboard.render.com")
    print("      - Logs de la aplicaci√≥n: https://dashboard.render.com/web/calculadora-fabricabilidad")
    print("      - Documentaci√≥n Render.com: https://render.com/docs")

if __name__ == "__main__":
    check_web_status() 